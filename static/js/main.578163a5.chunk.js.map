{"version":3,"sources":["App.js","index.js"],"names":["App","props","useState","term","setTerm","startSearch","setStartSearch","useEffect","console","log","getPics","className","type","onChange","e","target","value","placeholder","onClick","preventDefault","pics","map","pic","src","urls","thumb","alt","id","key","style","marginLeft","marginBotton","actionsType","initialState","error","loading","getPictures","dispatch","axios","get","params","query","page","per_page","headers","Authorization","then","response","data","results","payload","catch","failureAction","logger","createLogger","store","createStore","state","action","applyMiddleware","ReduxThunk","rootElement","document","getElementById","subscribe","getState","ReactDOM","render"],"mappings":"uNAGe,SAASA,EAAIC,GAAQ,IAAD,EACTC,mBAAS,IADA,mBAC1BC,EAD0B,KACpBC,EADoB,OAEKF,oBAAS,GAFd,mBAE1BG,EAF0B,KAEbC,EAFa,KAejC,OARAC,qBAAU,WACJF,IACFG,QAAQC,IAAI,QACZR,EAAMS,QAAQP,GACdG,GAAe,OAKjB,yBAAKK,UAAU,aACb,yBAAKA,UAAU,0EACb,2BACEC,KAAK,OACLC,SAjBc,SAAAC,GACpBV,EAAQU,EAAEC,OAAOC,QAiBXL,UAAU,0BACVM,YAAY,gCAEd,2BACEL,KAAK,SACLI,MAAM,SACNL,UAAU,yCACVO,QAAS,SAAAJ,GACPA,EAAEK,iBACFb,GAAe,OAIrB,yBAAKK,UAAU,yCACZV,EAAMmB,KAAKC,KAAI,SAAAC,GAAG,OACjB,yBACEC,IAAKD,EAAIE,KAAKC,MACdC,IAAKJ,EAAIK,GACTC,IAAKN,EAAIK,GACThB,UAAU,+DACVkB,MAAO,CAAEC,WAAY,OAAQC,aAAc,e,4CCnCjDC,EACK,UADLA,EAEK,UAFLA,EAGK,UAILC,EAAe,CACnBb,KAAM,GACNc,MAAO,GACPC,SAAS,GAuCLC,EAAc,SAAAjC,GAClB,OAAO,SAAAkC,GACLA,EApCK,CACLzB,KAAMoB,IAoCNM,IACGC,IAAI,yCAA0C,CAC7CC,OAAQ,CACNC,MAAOtC,GAAQ,WACfuC,KAAM,EACNC,SAAU,IAEZC,QAAS,CACPC,cACE,gFAGLC,MAAK,SAAAC,GA5CU,IAAA3B,EA8CdZ,QAAQC,IAAI,mBACZ4B,GA/CcjB,EA+CS2B,EAASC,KAAKC,QA9CpC,CACLrC,KAAMoB,EACNkB,QAAS9B,QA8CN+B,OAAM,SAAAjB,GAELG,EA5Cc,SAAAH,GACpB,MAAO,CACLtB,KAAMoB,EACNkB,QAAShB,GAyCIkB,CAAclB,SAKzBmB,EAASC,yBAETC,EAAQC,aA3CE,WAAmC,IAAlCC,EAAiC,uDAAzBxB,EAAcyB,EAAW,uCAChD,OAAQA,EAAO9C,MACb,KAAKoB,EACH,MAAgB,CAAEG,SAAS,GAC7B,KAAKH,EACH,MAAgB,CAAEG,SAAS,EAAOf,KAAMsC,EAAOR,SACjD,KAAKlB,EACH,MAAgB,CAAEG,SAAS,EAAOD,MAAOwB,EAAOR,SAClD,QACE,OAAOO,KAkCsBE,YAAgBC,IAAYP,IAE/DE,EAAMlB,SAASD,KACf,IAAMyB,EAAcC,SAASC,eAAe,QAO5CR,EAAMS,WANS,WACb,IAAIhB,EAAOO,EAAMU,WAAW7C,KAC5BZ,QAAQC,IAAIuC,GACZkB,IAASC,OAAO,kBAAC,EAAD,CAAK/C,KAAM4B,EAAMtC,QAAS0B,IAAiByB,Q","file":"static/js/main.578163a5.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nexport default function App(props) {\n  const [term, setTerm] = useState(\"\");\n  const [startSearch, setStartSearch] = useState(false);\n  const changeHandler = e => {\n    setTerm(e.target.value);\n  };\n\n  useEffect(() => {\n    if (startSearch) {\n      console.log(\"test\");\n      props.getPics(term);\n      setStartSearch(false);\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      <div className=\"bg-secondary container border border-1 border-dark m-5 row rounded p-3\">\n        <input\n          type=\"text\"\n          onChange={changeHandler}\n          className=\"form-control col-8 mr-4\"\n          placeholder=\"Enter a type of pictures...\"\n        />\n        <input\n          type=\"submit\"\n          value=\"Search\"\n          className=\"btn btn-primary col-3 p-2 form-control\"\n          onClick={e => {\n            e.preventDefault();\n            setStartSearch(true);\n          }}\n        />\n      </div>\n      <div className=\"row d-flex justify-content-center m-3\">\n        {props.pics.map(pic => (\n          <img\n            src={pic.urls.thumb}\n            alt={pic.id}\n            key={pic.id}\n            className=\"col-md-3 col-sm-10 border border-1 border-light rounded mb-3\"\n            style={{ marginLeft: \"1rem\", marginBotton: \"1rem\" }}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport axios from \"axios\";\nimport ReduxThunk from \"redux-thunk\";\n\n//ACTION TYPES\nconst actionsType = {\n  loading: \"LOADING\",\n  success: \"SUCCESS\",\n  failure: \"FAILURE\"\n};\n\n//DEFINE INITIAL STATE\nconst initialState = {\n  pics: [],\n  error: \"\",\n  loading: false\n};\n\n//DEFINE ACTIONS\nconst loadingAction = () => {\n  return {\n    type: actionsType.loading\n  };\n};\n\nconst successAction = pics => {\n  return {\n    type: actionsType.success,\n    payload: pics\n  };\n};\n\nconst failureAction = error => {\n  return {\n    type: actionsType.failure,\n    payload: error\n  };\n};\n\n//DEFINE REDUCER\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionsType.loading:\n      return (state = { loading: true });\n    case actionsType.success:\n      return (state = { loading: false, pics: action.payload });\n    case actionsType.failure:\n      return (state = { loading: false, error: action.payload });\n    default:\n      return state;\n  }\n};\n\n//FETCH DATA FROM API\nconst getPictures = term => {\n  return dispatch => {\n    dispatch(loadingAction());\n    axios\n      .get(\"https://api.unsplash.com/search/photos\", {\n        params: {\n          query: term || \"football\",\n          page: 1,\n          per_page: 20\n        },\n        headers: {\n          Authorization:\n            \"Client-ID a5aadbbf4877dad65ca06fdb284a01cad2b2c117fc746d5c0dfef2009c719cac\"\n        }\n      })\n      .then(response => {\n        //pass to success action paylod\n        console.log(\"inside response\");\n        dispatch(successAction(response.data.results));\n      })\n      .catch(error => {\n        //pass to failure action payload\n        dispatch(failureAction(error));\n      });\n  };\n};\n\nconst logger = createLogger();\n//CREATE STORE\nconst store = createStore(reducer, applyMiddleware(ReduxThunk, logger));\n\nstore.dispatch(getPictures());\nconst rootElement = document.getElementById(\"root\");\nconst render = () => {\n  let data = store.getState().pics;\n  console.log(data);\n  ReactDOM.render(<App pics={data} getPics={getPictures} />, rootElement);\n};\n\nstore.subscribe(render);\n"],"sourceRoot":""}